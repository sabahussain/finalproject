/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.33
 * Generated at: 2016-05-14 03:53:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class cartview_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/views/header.jsp", Long.valueOf(1463112623750L));
    _jspx_dependants.put("jar:file:/G:/project/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/bookland/WEB-INF/lib/spring-webmvc-4.2.5.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1456342892000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-4.2.5.RELEASE.jar", Long.valueOf(1463035733795L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fspring_005furl_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fspring_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fspring_005furl_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${a}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/bootstrap.min.css\" rel=\"stylesheet\"/>\r\n");
      out.write(" <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${b}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/jquery-2.2.3.min.js\">\r\n");
      out.write(" </script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${b}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/bootstrap.min.js\">\r\n");
      out.write("</script>\r\n");
      out.write("<style>\r\n");
      out.write(".navbar-default {\r\n");
      out.write("    background-color: #FFAEC9;\r\n");
      out.write("    border-color: #E7E7E7;\r\n");
      out.write("}\r\n");
      out.write(".navbar-default .navbar-nav > li > a {\r\n");
      out.write("    color: #777777;\r\n");
      out.write("}\r\n");
      out.write(".navbar-default .navbar-nav > .active > a, .navbar-default .navbar-nav > .active > a:hover, .navbar-default .navbar-nav > .active > a:focus {\r\n");
      out.write("    background-color: #FFE4C4;\r\n");
      out.write("    color: #555555;\r\n");
      out.write("}\r\n");
      out.write(".navbar-brand\r\n");
      out.write("{padding: 0px 0px;}\r\n");
      out.write("</style>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("   <nav class=\"navbar navbar-default navbar-inverse\">\r\n");
      out.write("  <div class=\"container-fluid\">\r\n");
      out.write("    <div class=\"navbar-header\">\r\n");
      out.write("      <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#myNavbar\">\r\n");
      out.write("        <span class=\"icon-bar\"></span>\r\n");
      out.write("        <span class=\"icon-bar\"></span>\r\n");
      out.write("        <span class=\"icon-bar\"></span>                        \r\n");
      out.write("      </button>\r\n");
      out.write("      <a class=\"navbar-brand\" href=\"#\"><img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${z}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/newlogo.png\" alt=\"\" width=\"180\" height=\"50\" ></a>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"collapse navbar-collapse\" id=\"myNavbar\">\r\n");
      out.write("      <ul class=\"nav navbar-nav\">\r\n");
      out.write("        <li class=\"active\"><a href=\"index\">Home</a></li>\r\n");
      out.write("         <li><a href=\"contactus\">Contact</a></li>\r\n");
      out.write("        <li class=\"dropdown\">\r\n");
      out.write("           <a class=\"dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\">Product<span class=\"caret\"></span></a>\r\n");
      out.write("          <ul class=\"dropdown-menu\">\r\n");
      out.write("            <li><a href=\"product\">Comic & Graphic Novels</a></li>\r\n");
      out.write("            <li><a href=\"product\">Literature & Fiction Books</a></li>\r\n");
      out.write("            <li><a href=\"product\">Poetry</a></li>  \r\n");
      out.write("             <li><a href=\"product\">Fantasy Books</a></li>                        \r\n");
      out.write("          </ul>\r\n");
      out.write("        </li>\r\n");
      out.write("        </ul>\r\n");
      out.write("      <ul class=\"nav navbar-nav navbar-right\">\r\n");
      out.write("        <li><a href=\"register\"><span class=\"glyphicon glyphicon-user\"></span> Register</a></li>\r\n");
      out.write("        <li><a href=\"login\"><span class=\"glyphicon glyphicon-log-in\"></span> Login</a></li>\r\n");
      out.write("         <li><a href=\"admin\"><span class=\"glyphicon glyphicon-user\"></span> Admin</a></li>\r\n");
      out.write("      </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</nav>\r\n");
      out.write("  \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("var cartApp = angular.module (\"cartApp\", []);\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("cartApp.controller('ctrl', function($scope) {\r\n");
      out.write("$scope.cart =");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${p}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("  \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* cartApp.controller(\"cartCtrl\", function($scope, $http){\r\n");
      out.write("\r\n");
      out.write("    $scope.refreshCart = function(){\r\n");
      out.write("       $http.get('/rest/cart/' + $scope.cartId).success(function (data){\r\n");
      out.write("           $scope.cart = data;\r\n");
      out.write("       });\r\n");
      out.write("    };\r\n");
      out.write("\r\n");
      out.write("   /*  $scope.clearCart = function(){\r\n");
      out.write("        $http.delete('/rest/cart/' + $scope.cartId).success($scope.refreshCart());\r\n");
      out.write("    };\r\n");
      out.write(" \r\n");
      out.write("    $scope.initCartId = function(cartId){\r\n");
      out.write("        $scope.cartId = cartId;\r\n");
      out.write("        $scope.refreshCart(cartId);\r\n");
      out.write("    };\r\n");
      out.write("\r\n");
      out.write("    $scope.addToCart = function(productId){\r\n");
      out.write("        $http.put('/rest/cart/add/' + productId).success(function (){\r\n");
      out.write("            alert('Product successfully added to the cart!');\r\n");
      out.write("        });\r\n");
      out.write("    };\r\n");
      out.write("\r\n");
      out.write("    $scope.removeFromCart = function(productId){\r\n");
      out.write("        $http.put('/rest/cart/remove/' + productId).success(function(data){\r\n");
      out.write("           $scope.refreshCart();\r\n");
      out.write("        });\r\n");
      out.write("    }; */\r\n");
      out.write("\r\n");
      out.write("    $scope.calGrandTotal = function(){\r\n");
      out.write("        var grandTotal = 0;\r\n");
      out.write("\r\n");
      out.write("        for (var i = 0; i < $scope.cart.cartItems.length; i++){\r\n");
      out.write("            grandTotal += $scope.cart.cartItems[i].totalPrice;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        return grandTotal;\r\n");
      out.write("    }\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<div class=\"container-wrapper\">\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <section>\r\n");
      out.write("            <div class=\"jumbotron\">\r\n");
      out.write("                <div class=\"container\">\r\n");
      out.write("                    <h1>Cart</h1>\r\n");
      out.write("                    <p>All the selected products in your shopping cart</p>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </section>\r\n");
      out.write("\r\n");
      out.write("        <section class=\"container\" ng-app=\"cartApp\">\r\n");
      out.write("\r\n");
      out.write("            <div ng-controller = \"cartCtrl\">\r\n");
      out.write("\r\n");
      out.write("                ");
      out.write("\r\n");
      out.write("                <table class=\"table table-hover\">\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <th>Product</th>\r\n");
      out.write("                        <th>Unit Price</th>\r\n");
      out.write("                        <th>Quantity</th>\r\n");
      out.write("                        <th>Price</th>\r\n");
      out.write("                        <th>Action</th>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                    <tr ng-repeat = \"item in cart.cartItems\">\r\n");
      out.write("                        <td>{{item.product.name}}</td>\r\n");
      out.write("                        <td>{{item.product.price}}</td>\r\n");
      out.write("                        <td>{{item.quantity}}</td>\r\n");
      out.write("                        <td>{{item.totalPrice}}</td>\r\n");
      out.write("                        <td><a href=\"#\" class=\"label label-danger\" ng-click=\"removeFromCart(item.product.id)\"><span class=\"glyphicon glyphicon-remove\"></span>remove</a></td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <th></th>\r\n");
      out.write("                        <th></th>\r\n");
      out.write("                        <th>Grand Total</th>\r\n");
      out.write("                        <th>{{calGrandTotal()}}</th>\r\n");
      out.write("                        <th></th>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                </table>\r\n");
      out.write("\r\n");
      out.write("                <a href=\"");
      if (_jspx_meth_spring_005furl_005f0(_jspx_page_context))
        return;
      out.write("\" class=\"btn btn-default\">Continue Shopping</a>\r\n");
      out.write("            </div>\r\n");
      out.write("        </section>\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_spring_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:url
    org.springframework.web.servlet.tags.UrlTag _jspx_th_spring_005furl_005f0 = (org.springframework.web.servlet.tags.UrlTag) _005fjspx_005ftagPool_005fspring_005furl_0026_005fvalue_005fnobody.get(org.springframework.web.servlet.tags.UrlTag.class);
    _jspx_th_spring_005furl_005f0.setPageContext(_jspx_page_context);
    _jspx_th_spring_005furl_005f0.setParent(null);
    // /WEB-INF/views/cartview.jsp(102,25) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005furl_005f0.setValue("/productList");
    int[] _jspx_push_body_count_spring_005furl_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_spring_005furl_005f0 = _jspx_th_spring_005furl_005f0.doStartTag();
      if (_jspx_th_spring_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_spring_005furl_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_spring_005furl_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_spring_005furl_005f0.doFinally();
      _005fjspx_005ftagPool_005fspring_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_spring_005furl_005f0);
    }
    return false;
  }
}
